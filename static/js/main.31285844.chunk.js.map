{"version":3,"sources":["components/Spinner/Spinner.module.scss","components/Nav/Nav.module.scss","components/Title/Title.js","components/Nav/Nav.js","components/Spinner/Spinner.js","components/Button/Button.js","components/StatusBar/StatusBar.js","components/PokemonPage/PokemonPage.js","components/PokemonCard/PokemonCard.js","services/pokemon.js","components/Wrapper/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","props","className","title","Nav","styles","nav","Spinner","wrapper","spinner","Button","name","onClickHandler","isDisabled","onClick","disabled","type","StatusBar","base","stats","base_stat","style","width","PokemonPage","pokemon","sprite","sprites","useState","front_default","spritesImage","setSpritesImage","isSwitching","useEffect","document","body","overflowY","src","alt","back_default","weight","height","types","map","index","key","abilities","ability","stat","PokemonCard","toggleModal","setToggleModal","invertToggle","catchAllPokemons","url","a","Promise","resolve","reject","fetch","then","res","json","data","catchPokemon","Wrapper","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","isLoading","setIsLoading","filterValue","setFilterValue","apiLimit","apiUrl","fetchUrl","loadingPokemon","results","next","previous","all","pokemonDataAsync","filteredPokemon","filter","item","toUpperCase","search","fetchPrev","fetchNext","onChange","event","inputData","target","value","placeholder","length","element","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.31285844.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Spinner_wrapper__1mFJV\",\"spinner\":\"Spinner_spinner__2b6Ti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__fab2q\"};","import React from \"react\";\r\nimport \"./Title.scss\";\r\n\r\nfunction Title(props) {\r\n  return (\r\n    <div className=\"title__container\">\r\n      <div className=\"title__title\">{props.title}</div>\r\n      <div className=\"title__subtitle\">Gotta Catch 'em All</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport styles from \"./Nav.module.scss\";\r\nimport Title from \"../Title/Title\";\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <Title title=\"Pokedex\" />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport styles from \"./Spinner.module.scss\";\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.spinner}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nfunction Button({ name, onClickHandler, isDisabled = false }) {\r\n  return (\r\n    <button\r\n      className={`btn ${name}`}\r\n      onClick={onClickHandler}\r\n      disabled={isDisabled}\r\n      type=\"button\"\r\n    >\r\n      {name}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./StatusBar.scss\";\r\n\r\nconst StatusBar = ({ stats }) => {\r\n  const base = stats.base_stat;\r\n  return (\r\n    <div className=\"status-container\">\r\n      <div\r\n        className=\"status-bar\"\r\n        style={{\r\n          width: base + \"%\"\r\n        }}\r\n      >\r\n        <div className=\"status-text\">{base}%</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./PokemonPage.scss\";\r\nimport Button from \"../Button/Button\";\r\nimport StatusBar from \"../StatusBar/StatusBar\";\r\n\r\nfunction PokemonPage({ pokemon, onClickHandler }) {\r\n  let sprite = pokemon.sprites;\r\n  const [spritesImage, setSpritesImage] = useState(sprite.front_default);\r\n  let isSwitching = true;\r\n  const switching = () => {\r\n    if (isSwitching) {\r\n      setSpritesImage(sprite.back_default);\r\n      isSwitching = !isSwitching;\r\n    } else {\r\n      isSwitching = !isSwitching;\r\n      setSpritesImage(sprite.front_default);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onClickHandler) {\r\n      document.body.style.overflowY = \"hidden\";\r\n    }\r\n  });\r\n\r\n  const showScrollbar = () => {\r\n    document.body.style.overflowY = \"visible\";\r\n  };\r\n\r\n  const toggleSroll = () => {\r\n    onClickHandler();\r\n    showScrollbar();\r\n  };\r\n\r\n  return (\r\n    <div className={`pokemonPage__container`}>\r\n      <div className=\"pokemonPage__wrapper\">\r\n        <div className=\"pokemonPage__image\">\r\n          <img src={spritesImage} alt={pokemon.name} />\r\n        </div>\r\n        <Button name=\"switch\" onClickHandler={switching} />\r\n        <h2 className=\"pokemonPage__name\">{pokemon.name}</h2>\r\n        <div className=\"pokemonPage__info\">\r\n          <div>\r\n            <span>Weight:</span> {pokemon.weight} lbs.\r\n          </div>\r\n          <div>Height: {pokemon.height} in.</div>\r\n        </div>\r\n        <h4>Types:</h4>\r\n        <div className=\"pokemonPage__type-wrapper\">\r\n          {pokemon.types.map((type, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className={`pokemonPage__type ${type.type.name}`}\r\n              >\r\n                {type.type.name}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4>Abilities:</h4>\r\n        <div className=\"pokemonPage__ability-wrapper\">\r\n          {pokemon.abilities.map((ability, index) => {\r\n            return (\r\n              <div\r\n                className={`pokemonPage__ability ${ability.ability.name}`}\r\n                key={index}\r\n              >\r\n                {ability.ability.name}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h4>Stats:</h4>\r\n        <div className=\"pokemonPage__stats-wrapper\">\r\n          {pokemon.stats.map((stats, index) => {\r\n            return (\r\n              <div key={index} className=\"pokemonPage__stats\">\r\n                <div className=\"pokemonPage__stats-text\">{stats.stat.name}</div>\r\n                <StatusBar stats={stats} />\r\n                <br />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <Button name=\"close\" onClickHandler={toggleSroll} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonPage;\r\n","import React, { useState } from \"react\";\r\nimport \"./PokemonCard.scss\";\r\nimport PokemonPage from \"../PokemonPage/PokemonPage\";\r\nimport Button from \"../Button/Button\";\r\n\r\nfunction PokemonCard({ pokemon }) {\r\n  const [toggleModal, setToggleModal] = useState(false);\r\n  const invertToggle = () => {\r\n    setToggleModal(!toggleModal);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pokemonCard__wrapper\">\r\n      <div className=\"pokemonCard__container\">\r\n        <div className=\"pokemonCard__image\">\r\n          <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n        </div>\r\n        <h2 className=\"pokemonCard__name\">{pokemon.name}</h2>\r\n        <Button name=\"SHOW MORE\" onClickHandler={invertToggle} />\r\n      </div>\r\n      {toggleModal ? (\r\n        <PokemonPage pokemon={pokemon} onClickHandler={invertToggle} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonCard;\r\n","export async function catchAllPokemons(url) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        resolve(data);\r\n      });\r\n  });\r\n}\r\n\r\nexport async function catchPokemon(url) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        resolve(data);\r\n      });\r\n  });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Wrapper.scss\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\r\nimport Button from \"../Button/Button\";\r\nimport { catchAllPokemons, catchPokemon } from \"../../services/pokemon\";\r\n\r\nfunction Wrapper() {\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(\"\");\r\n  const [prevUrl, setPrevUrl] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const [apiLimit] = useState(21);\r\n  const apiUrl = `https://pokeapi.co/api/v2/pokemon/?limit=${apiLimit}`;\r\n\r\n  useEffect(() => {\r\n    fetchUrl(apiUrl);\r\n  }, []);\r\n\r\n  const fetchUrl = async url => {\r\n    if (!url) {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    const data = await catchAllPokemons(url);\r\n    await loadingPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const loadingPokemon = async data => {\r\n    const pokemonDataAsync = await Promise.all(\r\n      data.map(async pokemon => {\r\n        return await catchPokemon(pokemon.url);\r\n      })\r\n    );\r\n    setPokemonData(pokemonDataAsync);\r\n  };\r\n\r\n  const onFilterChange = event => {\r\n    const inputData = event.target.value;\r\n    setFilterValue(inputData);\r\n  };\r\n\r\n  const filteredPokemon = pokemonData.filter(item => {\r\n    const searchedPokemon = item.name\r\n      .toUpperCase()\r\n      .search(filterValue.toUpperCase());\r\n    return searchedPokemon !== -1;\r\n  });\r\n\r\n  const fetchPrev = () => {\r\n    fetchUrl(prevUrl);\r\n  };\r\n\r\n  const fetchNext = () => {\r\n    fetchUrl(nextUrl);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"wrapper__container\">\r\n          <div className=\"wrapper__btn\">\r\n            {prevUrl && (\r\n              <Button\r\n                name=\"prev\"\r\n                onClickHandler={fetchPrev}\r\n                isDisabled={!prevUrl}\r\n              />\r\n            )}\r\n            {nextUrl && (\r\n              <Button\r\n                name=\"next\"\r\n                onClickHandler={fetchNext}\r\n                isDisabled={!nextUrl}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"wrapper__input-container\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"search\"\r\n              className=\"wrapper__input\"\r\n              onChange={onFilterChange}\r\n              placeholder=\"SEARCH\"\r\n            />\r\n          </div>\r\n          {filteredPokemon.length > null ? (\r\n            <div className=\"wrapper__card\">\r\n              {filteredPokemon.map((element, index) => {\r\n                return <PokemonCard key={index} pokemon={element} />;\r\n              })}\r\n            </div>\r\n          ) : (\r\n            <div>No results</div>\r\n          )}\r\n          <div className=\"wrapper__btn\">\r\n            {prevUrl && (\r\n              <Button\r\n                name=\"prev\"\r\n                onClickHandler={fetchPrev}\r\n                isDisabled={!prevUrl}\r\n              />\r\n            )}\r\n            {nextUrl && (\r\n              <Button\r\n                name=\"next\"\r\n                onClickHandler={fetchNext}\r\n                isDisabled={!nextUrl}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav/Nav\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav />\n      <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}